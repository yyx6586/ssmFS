<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aloogn.fs.user_homework.mapper.UserHomeworkMapper">
  <resultMap id="BaseResultMap" type="com.aloogn.fs.user_homework.bean.UserHomework">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="account" jdbcType="CHAR" property="account" />
    <result column="subject_name" jdbcType="VARCHAR" property="subject_name" />
    <result column="gradeclass_id" jdbcType="CHAR" property="gradeclass_id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="creat_time" jdbcType="TIMESTAMP" property="creat_time" />
    <result column="update_time" jdbcType="TIMESTAMP" property="update_time" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.aloogn.fs.user_homework.bean.UserHomework">
    <result column="homework" jdbcType="LONGVARCHAR" property="homework" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, account, subject_name, gradeclass_id, title, creat_time, update_time
  </sql>
  <sql id="Blob_Column_List">
    homework
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.aloogn.fs.user_homework.bean.UserHomeworkCriteria" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_homework
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.aloogn.fs.user_homework.bean.UserHomeworkCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_homework
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from user_homework
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_homework
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.aloogn.fs.user_homework.bean.UserHomeworkCriteria">
    delete from user_homework
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.aloogn.fs.user_homework.bean.UserHomework">
    insert into user_homework (id, account, subject_name, 
      gradeclass_id, title, creat_time, 
      update_time, homework)
    values (#{id,jdbcType=INTEGER}, #{account,jdbcType=CHAR}, #{subject_name,jdbcType=VARCHAR}, 
      #{gradeclass_id,jdbcType=CHAR}, #{title,jdbcType=VARCHAR}, #{creat_time,jdbcType=TIMESTAMP}, 
      #{update_time,jdbcType=TIMESTAMP}, #{homework,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.aloogn.fs.user_homework.bean.UserHomework">
    insert into user_homework
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="subject_name != null">
        subject_name,
      </if>
      <if test="gradeclass_id != null">
        gradeclass_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="creat_time != null">
        creat_time,
      </if>
      <if test="update_time != null">
        update_time,
      </if>
      <if test="homework != null">
        homework,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=CHAR},
      </if>
      <if test="subject_name != null">
        #{subject_name,jdbcType=VARCHAR},
      </if>
      <if test="gradeclass_id != null">
        #{gradeclass_id,jdbcType=CHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="creat_time != null">
        #{creat_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="homework != null">
        #{homework,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.aloogn.fs.user_homework.bean.UserHomeworkCriteria" resultType="java.lang.Long">
    select count(*) from user_homework
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user_homework
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=CHAR},
      </if>
      <if test="record.subject_name != null">
        subject_name = #{record.subject_name,jdbcType=VARCHAR},
      </if>
      <if test="record.gradeclass_id != null">
        gradeclass_id = #{record.gradeclass_id,jdbcType=CHAR},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.creat_time != null">
        creat_time = #{record.creat_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.update_time != null">
        update_time = #{record.update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.homework != null">
        homework = #{record.homework,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update user_homework
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=CHAR},
      subject_name = #{record.subject_name,jdbcType=VARCHAR},
      gradeclass_id = #{record.gradeclass_id,jdbcType=CHAR},
      title = #{record.title,jdbcType=VARCHAR},
      creat_time = #{record.creat_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP},
      homework = #{record.homework,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user_homework
    set id = #{record.id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=CHAR},
      subject_name = #{record.subject_name,jdbcType=VARCHAR},
      gradeclass_id = #{record.gradeclass_id,jdbcType=CHAR},
      title = #{record.title,jdbcType=VARCHAR},
      creat_time = #{record.creat_time,jdbcType=TIMESTAMP},
      update_time = #{record.update_time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.aloogn.fs.user_homework.bean.UserHomework">
    update user_homework
    <set>
      <if test="account != null">
        account = #{account,jdbcType=CHAR},
      </if>
      <if test="subject_name != null">
        subject_name = #{subject_name,jdbcType=VARCHAR},
      </if>
      <if test="gradeclass_id != null">
        gradeclass_id = #{gradeclass_id,jdbcType=CHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="creat_time != null">
        creat_time = #{creat_time,jdbcType=TIMESTAMP},
      </if>
      <if test="update_time != null">
        update_time = #{update_time,jdbcType=TIMESTAMP},
      </if>
      <if test="homework != null">
        homework = #{homework,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.aloogn.fs.user_homework.bean.UserHomework">
    update user_homework
    set account = #{account,jdbcType=CHAR},
      subject_name = #{subject_name,jdbcType=VARCHAR},
      gradeclass_id = #{gradeclass_id,jdbcType=CHAR},
      title = #{title,jdbcType=VARCHAR},
      creat_time = #{creat_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP},
      homework = #{homework,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.aloogn.fs.user_homework.bean.UserHomework">
    update user_homework
    set account = #{account,jdbcType=CHAR},
      subject_name = #{subject_name,jdbcType=VARCHAR},
      gradeclass_id = #{gradeclass_id,jdbcType=CHAR},
      title = #{title,jdbcType=VARCHAR},
      creat_time = #{creat_time,jdbcType=TIMESTAMP},
      update_time = #{update_time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <!--  自定义查询  -->
  <select id="selectHomeworkByExample" parameterType="java.lang.String" resultMap="BaseResultMap">
      select user_homework.* from user_homework where account = #{value}
  </select>

  <!--  自定义查询  -->
  <select id="selectHomeworkByGrade_id" parameterType="java.lang.String" resultMap="BaseResultMap">
      select user_homework.* from user_homework where grade_id = #{value} order by id desc
  </select>

  <!--  自定义查询  -->
  <select id="selectHomework" parameterType="java.lang.String" resultMap="BaseResultMap">
      select user_homework.* from user_homework where grade_id = #{grade_id} and subject_name = #{subject_name}
  </select>

  <!--  自定义删除  -->
  <delete id="deleteHomeworkByExample" parameterType="java.lang.String">
      delete from user_homework where account = #{account} and grade_id = #{grade_id} and homework = #{homework}
  </delete>

</mapper>